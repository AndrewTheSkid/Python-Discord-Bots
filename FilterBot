# FOR THE MUTE COMMAND THERE IS A SLIGHT DELAY ON WHEN THE BOT SAYS THE USER IS MUTED, HOWEVER
# THE USER IS MUTED IMMINENTLY 
# to mute someone your command should look something like this "!mute @user 100"
# that should mute them for 100 seconds
# or to unmute them: "!unmute @user"

import discord
from discord.ext import commands
import asyncio


intents = discord.Intents.default()
intents.members = True
intents.message_content = True
bot = commands.Bot(command_prefix='!', intents=intents)

@bot.event
async def on_ready():
    try:
        print(f'{bot.user.name} has connected to Discord!')
    except:
        print('Bot failed to connect!')

#mute/unmute command
#DISCLAIMER - the bot will mute the user even if the message has it inside it, example:
#if the filter word was "lol" and the user said this "qwertyuiopLOLqwertyuiop" they will be kicked,
#this script still works even if they type it in all lowercase or uppercase or any case.

#if you want a bot that can ban someone just let me know on discord (read the readme file for my discord and how to setup a bot.)

@bot.event
async def on_message(message):
    if "<replace with filter word>" in message.content.lower(): 
        user = message.author
        await message.delete()
        await message.author.send(f"Please Refrain From Using Slurs {user.mention}, you have been muted for 5 minutes.")
        await message.channel.send(f"Please Refrain From Using Slurs {user.mention}, you have been muted for 5 minutes.")
        await message.channel.set_permissions(message.author, send_messages=False, read_messages=True)
        await asyncio.sleep(300)
        await message.channel.set_permissions(message.author, send_messages=True, read_messages=True)

#unmute command
ALLOWED_ROLES = [#enter role id(s)]
@bot.event
async def on_message(message):
    if message.content.startswith('!unmute'):
        allowed = False
        for role in message.author.roles:
            if role.id in ALLOWED_ROLES:
                allowed = True
                break
        if not allowed:
            await message.channel.send('You are not allowed to use this command.')
            return
        if len(message.mentions) == 0:
            await message.channel.send('You must mention a user to unmute.')
            return
        user = message.mentions[0]
        guild = message.guild
        muted_channels = []
        for channel in guild.channels:
            if isinstance(channel, discord.TextChannel):
                permissions = channel.permissions_for(user)
                if not permissions.send_messages:
                    muted_channels.append(channel)
        if not muted_channels:
            await message.channel.send(f'{user.mention} is not currently muted.')
            return
        for channel in muted_channels:
            await channel.set_permissions(user, send_messages=True, read_messages=True)
        await message.channel.send(f'{user.mention} has been unmuted.')
    elif message.content.startswith('!mute'):
        allowed = False
        for role in message.author.roles:
            if role.id in ALLOWED_ROLES:
                allowed = True
                break
        if not allowed:
            await message.channel.send('You are not allowed to use this command.')
            return
        if len(message.mentions) == 0:
            await message.channel.send('You must mention a user to mute.')
            return
        user = message.mentions[0]
        seconds = 0
        args = message.content.split()
        if len(args) > 2:
            try:
                seconds = int(args[2])
            except ValueError:
                await message.channel.send('invalid time duration.')
                return
        already_muted = False
        for channel in message.guild.channels:
            if isinstance(channel, discord.TextChannel):
                permissions = channel.permissions_for(user)
                if not permissions.send_messages:
                    already_muted = True
                    break
        if already_muted:
            await message.channel.send(f'{user.mention} is already muted.')
        else:
            for channel in message.guild.channels:
                await channel.set_permissions(user, send_messages=False)
            if seconds == 0:
                await message.channel.send(f'Muted {user.mention} forever, until someone unmutes them. (sorry for the delay)')
            else:
                await message.channel.send(f'{user.mention} has been muted for {seconds} seconds. (sorry for the delay)')
                await asyncio.sleep(seconds)
                still_muted = False
                for channel in message.guild.channels:
                    if isinstance(channel, discord.TextChannel):
                        permissions = channel.permissions_for(user)
                        if not permissions.send_messages:
                            still_muted = True
                            break
                if still_muted:
                    for channel in message.guild.channels:
                        await channel.set_permissions(user, send_messages=True, read_messages=True)
                    await message.channel.send(f'{user.mention} has been unmuted after {seconds} seconds.')
                else:
                    await message.channel.send(f'{user.mention} has been unmuted.')



if __name__ == '__main__':
    bot.run('---') #replace with bot token
        
        
